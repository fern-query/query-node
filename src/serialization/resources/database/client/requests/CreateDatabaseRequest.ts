/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import { QueryApi } from "@fern-api/query";
import * as core from "../../../../../core";

export const CreateDatabaseRequest: core.serialization.Schema<
    serializers.CreateDatabaseRequest.Raw,
    QueryApi.CreateDatabaseRequest
> = core.serialization.object({
    name: core.serialization.string(),
    tables: core.serialization.record(
        core.serialization.string(),
        core.serialization.lazy(async () => (await import("../../../..")).Table)
    ),
    public: core.serialization.boolean(),
    sourceDetails: core.serialization.property(
        "source_details",
        core.serialization.lazyObject(async () => (await import("../../../..")).SourceDetails).optional()
    ),
    source: core.serialization.string(),
});

export declare namespace CreateDatabaseRequest {
    interface Raw {
        name: string;
        tables: Record<string, serializers.Table.Raw>;
        public: boolean;
        source_details?: serializers.SourceDetails.Raw | null;
        source: string;
    }
}
