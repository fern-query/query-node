/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../..";
import { QueryApi } from "@fern-api/query";
import * as core from "../../../../core";

export const NumenorConfig: core.serialization.ObjectSchema<serializers.NumenorConfig.Raw, QueryApi.NumenorConfig> =
    core.serialization.object({
        instructDate: core.serialization.boolean().optional(),
        instructFloatCast: core.serialization.boolean().optional(),
        instructArbitraryLimit: core.serialization.boolean().optional(),
        model: core.serialization.string(),
        temperature: core.serialization.number(),
        bestOf: core.serialization.number(),
        frequencyPenalty: core.serialization.number(),
        logprobs: core.serialization.number(),
        presencePenalty: core.serialization.number(),
        topP: core.serialization.number(),
        stop: core.serialization.list(core.serialization.string()),
    });

export declare namespace NumenorConfig {
    interface Raw {
        instructDate?: boolean | null;
        instructFloatCast?: boolean | null;
        instructArbitraryLimit?: boolean | null;
        model: string;
        temperature: number;
        bestOf: number;
        frequencyPenalty: number;
        logprobs: number;
        presencePenalty: number;
        topP: number;
        stop: string[];
    }
}
